<html>
    <head>
        <title>index.ejs</title>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.12.4.min.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>

        <script>   
            function writeComment(){
                //id값 지정안해도 자동으로 생김.
                    var form = document.getElementById("form_comment");
                    axios({
                        method: 'post',
                        url: 'http://localhost:8080/visitor/write',
                        data: {
                            name: form.name.value,
                            comment: form.comment.value
                        }
                    })
                    .then((rep) => {
                        return rep.data;
                    })
                    .then((data) => {
                        console.log(data.id);
                        let html = 
                        "<tr id='tr_" + data.id +"'><td>" + data.id + "</td><td>" + form.name.value + "</td><td>" + form.comment.value + "</td>" + "<td><button type='button' onclick='editComment(" + data.id + ");'>수정</button></td>"+ "<td><button type='button' onclick='deleteComment(" + data.id + ");'>삭제</button></td></tr>";
                        $("table").append(html);
                    }); // 문자열을 태그형태로 추가해줌.
            }

            function editComment( id ) {
                // id를 가져와서 셀렉트로 가져온다. id를 where조건절을 걸어서 한개의 값만 가져올 것임.
                axios({
                    method: 'get',
                    url: 'http://localhost:8080/visitor/get?id=' + id
                    // params로 따로 안써주고 url에서 붙여 넣어도 됨.
                })
                .then((rep) => { return rep.data })
                .then((data) => {
                    console.log(data);

                    var form = document.getElementById("form_comment");
                    form.name.value = data.result.name;
                    // 모델에 저장된 값을 form으로 읽어오는 것.
                    form.comment.value = data.result.comment; 

                    var html = 
                    "<button type='button' onclick='editDo(" + id + ");'> 수정 </button>";
                    "<button type='button' onclick='editCancel();'>취소</button>"

                    document.getElementById("button-group").innerHTML = html;
                }); 
                    // { data : result };
                    // [ { id: 0, name: 1 }]
                    // req.data.data[0].id;
            } 
            // 경로를 만들어야 하니까 라우터로 가자.
            
            function editDo( id ){
                // 정보를 새롭게 수정하는 함수
                var form = document.getElementById("form_comment");
                axios({
                    //  put은 전부 바꾸는 것, patch는 특정부분을 바꾸는 것
                    method: 'patch',
                    url : 'http://localhost:8080/visitor/edit',
                    data : {
                        id: id,
                        name: form.name.value, 
                        comment: form.comment.value
                    }
                }).then ((rep) => { return rep.data ; })
                .then((data) => {
                    alert( data );

                    var tr = document.getElementById("tr_" + id);
                    var children = tr.children;

                    $(children[1]).text(form.name.value); 
                    // tr의 하위 태그중 2번째인 name 수정. 
                    $(children[2]).text(form.comment.value);
                    console.log( children );
                })
            }

            function deleteComment( id ) {
                axios({
                    method : 'delete',
                    url: 'http://localhost:8080/visitor/delete',
                    data: { id: id}
                    // 컨트롤러에서 쓰기 위해 보내준다. 
                }).then((rep) => { return rep.data; })
                .then((data) => { 
                    alert( data );
                    // var tr = document.getElementById("tr_"+ id);
                    // $( tr ).remove(); 
                    // tr태그 동적으로 지우기.
                    $("#tr_" + id ).remove();
                });
            }

            function editCancel() {
                var form = document.getElementById("form_comment");
                form.reset();

                var html = "<button type='button' onclick='writeComment();'>등록</button>";
                document.getElementById("button-group").innerHTML = html;
            }

            let a = 1;
            var string = "안녕하세요 " + a + "님";
            var string2 = `안녕하세요 ${a}님`;
        </script>
    </head>
    <body>
        <!-- get, post는 보낸 경로와 요청한 경로가 같아야 함. -->
        <form id="form_comment">
            <fieldset style="width: 300px;">
                <legend>방명록 등록</legend>
                이름: <input type="text" name="name" placeholder="이름을 입력하세요."><br>
                방명록: <input type="text" name="comment" placeholder="방명록">
                <br>
                <div id = "button-group">
                    <button type="button" onclick="writeComment();">등록</button>
                </div>
            </fieldset>
            
        </form>
    <table border="1" cellspacing="0" cellpadding="5">
        <thead>
            <tr>
                <th>ID</th>
                <th>작성자</th>
                <th>방명록</th>
                <th>수정</th>
                <th>삭제</th>
            </tr>
        </thead>
        <tbody>
            
        <%
        for (let i = 0; i < data.length; i++) {
        %>
        <tr id="tr_<%=data[i].id%>">
            <td><%=data[i].id%></td>
            <td><%=data[i].name%></td>
            <td><%=data[i].comment%></td>
            <td><button type="button" onclick="editComment('<%=data[i].id%>');">수정</button></td> 
            <td><button type="button" onclick="deleteComment('<%=data[i].id%>');">삭제</button></td> 
            <!-- id로 행이 구분됨. -->
        </tr>
        <%
        }
        %>
        </tbody>
    </table>
    
    </body>
</html>